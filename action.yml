# builds mkdocs site
name: Build
description: 'builds mkdocs site'
inputs:
  archive-enabled:
    description: 'Enables archiving of build artifact.  Ex: `true` or `false`'
    default: false
    required: true
    type: boolean
  version:
    description: 'Build version.  Used to store archive at unique S3 key.  Ex: sha-####, 3.0.0'
    required: false
    type: string
  env-name:
    description: 'Environment name.  Ex: dev, prod'
    default: 'dev'
    required: true
    type: string
  aws-region:
    description: 'AWS Region.  Ex: us-east-1'
    default: 'us-east-1'
    required: true
    type: string                      
secrets:
  aws-access-key-id:
    description: 'AWS Access Key ID.'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key.'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Buildenv
      uses: ntno/setup-buildenv@v1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }} 
    - name: Restore Pip Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip' # caching pip dependencies
    - name: Download Image Bundle
      run: |
        make get-image-bundle download-directory="$RUNNER_TEMP/"
    - name: Build Site
      run: |
        source ./scripts/build.sh ${{ inputs.env-name }} ${{ inputs.aws-region }}
    - name: Archive Site
      run: |
        if [[ "${{ inputs.archive-enabled }}" == "true" ]]; then
            echo "Archiving site..."
            make bundle input-directory="./site" output-directory="./" bundle-filename="docs-site.tar" manifest-filename="manifest.txt"
            make upload-docs-artifact file="./docs-site.tar" version=${{ inputs.version }}
            make upload-docs-artifact file="./manifest.txt" version=${{ inputs.version }}
        else
            echo "Archive not enabled.  Skipping archive step..."
        fi
