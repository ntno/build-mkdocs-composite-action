# builds mkdocs site
name: Build
description: 'builds mkdocs site'
inputs:
  archive-enabled:
    description: 'Enables archiving of build artifact.  Ex: `true` or `false`'
    default: false
    required: true
    type: boolean
  version:
    description: 'Build version.  Used to store archive at unique S3 key.  Ex: sha-####, 3.0.0'
    required: false
    type: string
  env-name:
    description: 'Environment name.  Ex: dev, prod'
    default: 'dev'
    required: true
    type: string
  make-vars:
    description: 'Variables to pass to make commands.  Ex: `DRY_RUN=1` would result in `make DRY_RUN=1 deploy-mkdocs...` See README.md for details.'
    default: ""
    required: false
    type: string    
  aws-region:
    description: 'AWS Region.  Ex: us-east-1'
    default: 'us-east-1'
    required: true
    type: string                      
  aws-access-key-id:
    description: 'AWS Access Key ID.'
    required: true
    type: string
  aws-secret-access-key:
    description: 'AWS Secret Access Key.'
    required: true
    type: string
  python-version:
    description: 'Python Version'
    default: '3.8'
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }} 
    - name: Restore Pip Cache
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }} 
        cache: 'pip'
    - name: Download Assets
      shell: bash
      run: |
        make ${{ inputs.make-vars }} setup-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }} download-directory="$RUNNER_TEMP/"
    - name: Build Site
      shell: bash
      run: |
        make ${{ inputs.make-vars }} build-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }}
    - name: Archive Site
      shell: bash
      run: |
        if [[ "${{ inputs.archive-enabled }}" == "true" ]]; then
            echo "Archiving site..."
            make ${{ inputs.make-vars }} archive-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }} version=${{ inputs.version }}
        else
            echo "Archive not enabled.  Skipping archive step..."
        fi
