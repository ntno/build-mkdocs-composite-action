# builds mkdocs site
name: Build
description: 'builds mkdocs site'
inputs:
  archive-enabled:
    description: 'Enables archiving of build artifact.  Ex: `true` or `false`'
    default: false
    required: true
    type: boolean
  version:
    description: 'Build version.  Used to store archive at unique S3 key.  Ex: sha-####, 3.0.0'
    required: false
    type: string
  env-name:
    description: 'Environment name.  Ex: dev, prod'
    default: 'dev'
    required: true
    type: string
  make-vars:
    description: 'Variables to pass to all make commands.  Ex: `QUIET=1` would result in `make QUIET=1 build-mkdocs...`'
    default: "--no-print-directory"
    required: false
    type: string
  aws-region:
    description: 'AWS Region.  Ex: us-east-1'
    default: 'us-east-1'
    required: true
    type: string                      
  aws-access-key-id:
    description: 'AWS Access Key ID.'
    required: false
  aws-secret-access-key:
    description: 'AWS Secret Access Key.'
    required: false
  role-to-assume:
    description: >-
      Use the provided credentials to assume an IAM role and configure the Actions
      environment with the assumed role credentials rather than with the provided
      credentials
    required: false
  role-duration-seconds:
    description: "Role duration in seconds (default: 6 hours, 1 hour for OIDC/specified aws-session-token)"
    required: false
  role-session-name:
    description: 'Role session name (default: GitHubActions)'
    required: false
  role-external-id:
    description: 'The external ID of the role to assume'
    required: false
  role-skip-session-tagging:
    description: 'Skip session tagging during role assumption'
    required: false    
  python-version:
    description: 'Python Version'
    default: '3.8'
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-region: ${{ inputs.aws-region }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        role-to-assume: ${{ inputs.role-to-assume }}
        role-duration-seconds: ${{ inputs.role-duration-seconds }}
        role-session-name: ${{ inputs.role-session-name }}
        role-external-id: ${{ inputs.role-external-id }}
        role-skip-session-tagging: ${{ inputs.role-skip-session-tagging }}
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }} 
    - name: Upgrade Pip
      shell: bash
      run: |
        # install pip=>20.1 to use "pip cache dir"
        python3 -m pip install --upgrade pip
    - name: Get Pip Cache Dir
      id: pip-cache
      shell: bash
      run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: Cache Dependencies
      id: cache-pip-dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      shell: bash
      run: |
        if [[ "${{ steps.cache-pip-dependencies.outputs.cache-hit }}" == "true" ]]; then
          echo "Cache hit - skipping dependency installation"
        else
          python3 -m pip install -r ./requirements.txt
        fi
    - name: Download Assets
      shell: bash
      run: |
        make ${{ inputs.make-vars }} setup-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }} download-directory="$RUNNER_TEMP/"
    - name: Build Site
      shell: bash
      run: |
        make ${{ inputs.make-vars }} build-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }}
    - name: Archive Site
      shell: bash
      run: |
        if [[ "${{ inputs.archive-enabled }}" == "true" ]]; then
            echo "Archiving site..."
            make ${{ inputs.make-vars }} archive-mkdocs env=${{ inputs.env-name }} region=${{ inputs.aws-region }} version=${{ inputs.version }}
        else
            echo "Archive not enabled.  Skipping archive step..."
        fi
